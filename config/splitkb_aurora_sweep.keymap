#define HOST_OS 2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "keymap-swedish.h"
#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_36keys.h"
#include "../zmk-nodefree-config/international_chars/swedish.dtsi"

/* layer and key shortcuts */

#define ___ &trans

#define ALPHA  0  // layer shortcuts, must match order in which they are defined below 
#define SYM 1
#define NUM 2

/* custom behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "tap-preferred";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
)

ZMK_BEHAVIOR(hrm_ao, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&sv_ao>;
)

ZMK_BEHAVIOR(hrm_ae, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <125>;
    global-quick-tap;
    bindings = <&kp>, <&sv_ae>;
)

// tap: sticky shift | double tap: capsword
ZMK_BEHAVIOR(ss_cw, tap_dance,
    tapping-term-ms = <200>;
    bindings = <&sk LSHFT>, <&caps_word>;
)

// tap: backspace | shift + tap: delete | hold: num layer
ZMK_BEHAVIOR(bs_del_num, mod_morph,
    bindings = <&lt NUM BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
)

// windows sleep macro
ZMK_BEHAVIOR(win_sleep, macro,
    wait-ms = <100>;
    tap-ms = <5>;
    bindings = <&kp LG(X) &kp U &kp S>;
)

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

// replace a/o/u/s with German umlauts when NAV and NUM are held jointly
// ZMK_CONDITIONAL_LAYER(NAV NUM)

// combos
#undef COMBO_TERM
#define COMBO_TERM 60  // (default is 30ms if omitted)
//ZMK_COMBO(combo_copy,    &kp LC(C),     LB2 LB3, ALL)  // Ctrl + C, active on all layers
//ZMK_COMBO(combo_paste,   &kp LC(V),     LB1 LB2, ALL)  // Ctrl + V, active on all layers

ZMK_COMBO(combo_escape,  &kp ESC,       LM4 LM3, ALL)
ZMK_COMBO(combo_return,  &kp RET,       LM2 LM1, ALL)
ZMK_COMBO(combo_tab,     &kp TAB,       LM3 LM2, ALL)
ZMK_COMBO(combo_bspc,    &kp BSPC,      LM2 LT1, ALL)
ZMK_COMBO(combo_del,     &kp DEL,       LT2 LM1, ALL)

// navigation
ZMK_COMBO(combo_up,      &kp UP,        RT1 RT2,         ALL)
ZMK_COMBO(combo_down,    &kp DOWN,      RM1 RM2,         ALL)
ZMK_COMBO(combo_left,    &kp LEFT,      RM1 RT2,         ALL)
ZMK_COMBO(combo_right,   &kp RIGHT,     RT1 RM2,         ALL)
ZMK_COMBO(combo_pgup,    &kp PG_UP,     RT1 RT2 RT3,     ALL)
ZMK_COMBO(combo_pgdn,    &kp PG_DN,     RM1 RM2 RM3,     ALL)
ZMK_COMBO(combo_home,    &kp HOME,      RT1 RT2 RT3 RT4, ALL)
ZMK_COMBO(combo_end,     &kp END,       RM1 RM2 RM3 RM4, ALL)

// bluetooth
ZMK_COMBO(combo_next_bt, &bt BT_NXT,    RT4 RM4 RB4,               ALL)
ZMK_COMBO(combo_prev_bt, &bt BT_PRV,    LT4 LM4 LB4,               ALL)
ZMK_COMBO(combo_clr_bt,  &bt BT_CLR,    LT4 LM4 LB4 RT4 RM4 RB4,   ALL)

/* keymap */

ZMK_LAYER(alpha,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬───────────────┬───────────────┬─────────────╮
         &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U           &kp Y            ___
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼───────────────┼───────────────┼─────────────┤
         &kp A         &kp R         &kp S         &kp T         &kp G             &kp M         &kp N         &kp E           &kp I           &kp O
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼───────────────┼───────────────┼─────────────┤
         &kp Z         &hrm LGUI X   &hrm LALT C   &hrm LCTRL D  &kp V             &kp K         &hrm LCTRL H  &hrm LALT SE_AA &hrm LGUI SE_AE &kp SE_ODIA      
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼───────────────┴───────────────┴─────────────╯
                                                   &mo NUM       &kp LSHFT         &kp SPACE     &mo SYM         
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯ 
)

ZMK_LAYER(sym,
     // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
         &kp SE_DIAE   &kp SE_ACUT   &kp SQT       &kp DQT       &kp CARET         &kp SE_PERC   &kp SE_LBRC   &kp SE_RBRC   &kp SE_LT     &kp SE_GT
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp SE_AT     &kp SE_HASH   &kp SE_COMMA  &kp SE_DOT    &kp SE_MINS       &kp SE_ASTR   &kp SE_LPRN   &kp SE_RPRN   &kp SE_SLSH   &kp SE_BSLS
     // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
         &kp SE_CIRC   &kp SE_TILD   &kp SE_QUES   &kp SE_EXLM   &kp SE_PLUS       &kp SE_DLR    &kp SE_LBKT   &kp SE_RBKT   &kp SE_PIPE   &kp SE_AMPR
     // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    ___           ___               ___           ___
     //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

ZMK_LAYER(num,
     // ╭─────────────┬─────────────┬─────────────┬──────────────┬─────────────╮   ╭─────────────┬──────────────┬─────────────┬─────────────┬─────────────╮
         &kp F1        &kp F2        &kp F3        &kp F4         &kp F5            &kp F6        &kp F7         &kp F8        &kp F9        &kp F10        
     // ├─────────────┼─────────────┼─────────────┼──────────────┼─────────────┤   ├─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
         &kp N1        &kp N2        &kp N3        &kp N4         &kp N5            &kp N6        &kp N7         &kp N8        &kp N9        &kp N0
     // ├─────────────┼─────────────┼─────────────┼──────────────┼─────────────┤   ├─────────────┼──────────────┼─────────────┼─────────────┼─────────────┤
         &kp F11       &hrm LGUI F12 &hrm LALT F13 &hrm LCTRL F14 &kp F15           &kp F16       &hrm LCTRL F17 &hrm LALT F18 &hrm LGUI F19 &kp F20
     // ╰─────────────┴─────────────┴─────────────┼──────────────┼─────────────┤   ├─────────────┼──────────────┼─────────────┴─────────────┴─────────────╯
                                                    ___            ___               ___           ___
     //                                           ╰──────────────┴─────────────╯   ╰─────────────┴─────────────╯
)

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};